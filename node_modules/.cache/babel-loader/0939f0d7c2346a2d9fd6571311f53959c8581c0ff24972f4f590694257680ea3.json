{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Documents\\\\GitHub\\\\company-projects\\\\system-engineering-group-react\\\\client-side\\\\src\\\\components\\\\pages\\\\CompAddProduct.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport CompUploadImage from \"./CompUploadImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CompAddProduct(props) {\n  _s();\n  const [productName, setProductName] = useState(\"\");\n  const [productPrice, setProductPrice] = useState(\"\");\n  const [productDesc, setProductDesc] = useState(\"\");\n  const [imageName, setImageName] = useState(\"1\");\n  function doWork() {\n    if (!(imageName === \"1\")) {\n      props.addProduct({\n        pName: productName,\n        pPrice: productPrice,\n        pDesc: productDesc,\n        pSku: 0,\n        image: imageName\n      });\n    } else {\n      alert(\"ERROR Select Image\");\n      console.log(imageName);\n    }\n  }\n  const [backendData, setBackendData] = useState([{}]);\n  useEffect(() => {\n    fetch(\"/images-dir\").then(response => response.json()).then(data => {\n      setBackendData(data);\n    });\n  }, []);\n  function test() {\n    fetch(\"/product-save\", {\n      // Adding method type\n      method: \"POST\"\n\n      // Adding body or contents to send\n      // body: JSON.stringify({\n      //     title: \"foo\",\n      //     body: \"bar\",\n      //     userId: 1\n      // }),\n\n      // Adding headers to the request\n      // headers: {\n      //     \"Content-type\": \"application/json; charset=UTF-8\"\n      // }\n    })\n\n    // Converting to JSON\n    .then(response => response.json())\n\n    // Displaying results to console\n    .then(json => console.log(json));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CompUploadImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: evt => {\n          if (evt.currentTarget.value === 1) {\n            console.log(Error);\n          } else {\n            setImageName(evt.currentTarget.value);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Select Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), typeof backendData.FilesArray === \"undefined\" ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: \"disabled\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this) : backendData.FilesArray.map((file, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: file,\n          children: file\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pNameInput\",\n            className: \"form-label\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"pNameInput\",\n            id: \"pNameInput\",\n            className: \"form-control\",\n            onChange: evt => setProductName(evt.currentTarget.value),\n            value: productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pPriceInput\",\n            className: \"form-label\",\n            children: \"Product Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"pPriceInput\",\n            id: \"pPriceInput\",\n            className: \"form-control\",\n            onChange: evt => setProductPrice(evt.currentTarget.value),\n            value: productPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pDescInput\",\n            className: \"form-label\",\n            children: \"Product Desc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"pDescInput\",\n            id: \"pDescInput\",\n            className: \"form-control\",\n            onChange: evt => setProductDesc(evt.currentTarget.value),\n            value: productDesc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3 d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-lg btn-primary align-self-end\",\n            onClick: doWork,\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: test,\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CompAddProduct, \"GrrcSvU3aGtQW9GNFsJDOvCxtQQ=\");\n_c = CompAddProduct;\nexport default CompAddProduct;\nvar _c;\n$RefreshReg$(_c, \"CompAddProduct\");","map":{"version":3,"names":["useState","useEffect","CompUploadImage","CompAddProduct","props","productName","setProductName","productPrice","setProductPrice","productDesc","setProductDesc","imageName","setImageName","doWork","addProduct","pName","pPrice","pDesc","pSku","image","alert","console","log","backendData","setBackendData","fetch","then","response","json","data","test","method","evt","currentTarget","value","Error","FilesArray","map","file","i"],"sources":["C:/Users/jacob/Documents/GitHub/company-projects/system-engineering-group-react/client-side/src/components/pages/CompAddProduct.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport CompUploadImage from \"./CompUploadImage\";\r\n\r\n\r\nfunction CompAddProduct(props) {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productDesc, setProductDesc] = useState(\"\");\r\n\r\n  const [imageName, setImageName] = useState(\"1\");\r\n\r\n  function doWork() {\r\n    if (!(imageName === \"1\")) {\r\n      props.addProduct({\r\n        pName: productName,\r\n        pPrice: productPrice,\r\n        pDesc: productDesc,\r\n        pSku: 0,\r\n        image: imageName,\r\n      });\r\n    } else {\r\n      alert(\"ERROR Select Image\")\r\n      console.log(imageName);\r\n    }\r\n  }\r\n\r\n  const [backendData, setBackendData] = useState([{}]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/images-dir\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setBackendData(data);\r\n      });\r\n  }, []);\r\n\r\nfunction test() {\r\n  fetch(\"/product-save\", {\r\n     \r\n    // Adding method type\r\n    method: \"POST\",\r\n     \r\n    // Adding body or contents to send\r\n    // body: JSON.stringify({\r\n    //     title: \"foo\",\r\n    //     body: \"bar\",\r\n    //     userId: 1\r\n    // }),\r\n     \r\n    // Adding headers to the request\r\n    // headers: {\r\n    //     \"Content-type\": \"application/json; charset=UTF-8\"\r\n    // }\r\n})\r\n \r\n// Converting to JSON\r\n.then(response => response.json())\r\n \r\n// Displaying results to console\r\n.then(json => console.log(json));\r\n}\r\n\r\n  return (\r\n    <>\r\n      <CompUploadImage />\r\n      <div className=\"container p-4\">\r\n        <select\r\n          onChange={(evt) => {\r\n            if (evt.currentTarget.value === 1) {\r\n              console.log(Error);\r\n            } else {\r\n              setImageName(evt.currentTarget.value);\r\n            }\r\n          }}\r\n        >\r\n          <option value={\"1\"}>Select Image</option>\r\n          {typeof backendData.FilesArray === \"undefined\" ? (\r\n            <option value={\"\"} disabled=\"disabled\">\r\n              Loading...\r\n            </option>\r\n          ) : (\r\n            backendData.FilesArray.map((file, i) => (\r\n              <option key={i} value={file}>\r\n                {file}\r\n              </option>\r\n            ))\r\n          )}\r\n        </select>\r\n        <div className=\"row d-flex justify-content-center\">\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"pNameInput\" className=\"form-label\">\r\n              Product Name\r\n            </label>\r\n            <input\r\n              type=\"pNameInput\"\r\n              id=\"pNameInput\"\r\n              className=\"form-control\"\r\n              onChange={(evt) => setProductName(evt.currentTarget.value)}\r\n              value={productName}\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"pPriceInput\" className=\"form-label\">\r\n              Product Price\r\n            </label>\r\n            <input\r\n              type=\"pPriceInput\"\r\n              id=\"pPriceInput\"\r\n              className=\"form-control\"\r\n              onChange={(evt) => setProductPrice(evt.currentTarget.value)}\r\n              value={productPrice}\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"pDescInput\" className=\"form-label\">\r\n              Product Desc\r\n            </label>\r\n            <input\r\n              type=\"pDescInput\"\r\n              id=\"pDescInput\"\r\n              className=\"form-control\"\r\n              onChange={(evt) => setProductDesc(evt.currentTarget.value)}\r\n              value={productDesc}\r\n            />\r\n          </div>\r\n          <div className=\"col-3 d-flex justify-content-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-lg btn-primary align-self-end\"\r\n              onClick={doWork}\r\n            >\r\n              Add Product\r\n            </button>\r\n          </div>\r\n          <button type=\"button\" onClick={test}>test</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompAddProduct;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}